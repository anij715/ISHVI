From b660934c345d91dc8df9662cb13790a6f9254d5b Mon Sep 17 00:00:00 2001
From: Rizul Sharma <anij1997@gmail.com>
Date: Sun, 3 May 2020 10:04:03 +0000
Subject: [PATCH] Create Patch File

---
 __pycache__/client3.cpython-38.pyc | Bin 0 -> 1079 bytes
 client3.py                         |  28 ++++++++----------
 client_test.py                     |  45 ++++++++++++++++++++++++-----
 3 files changed, 50 insertions(+), 23 deletions(-)
 create mode 100644 __pycache__/client3.cpython-38.pyc

diff --git a/__pycache__/client3.cpython-38.pyc b/__pycache__/client3.cpython-38.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..5e40c72a6ade99ba26e6cc4d6413041782a9f362
GIT binary patch
literal 1079
zcmYjQO>fgM7`789O}BRJdsMrG1A<Cu9YR9WG+?mtahe7b5?Daw)o-_KY1}z3Vxv2a
z-@v)!#)Tijfgj;3C+?g$@y2Bnj@~c(js4_#oR{_b7{T%C^S5_jB0_$a#s8y<#X4H?
z1Dzz2W`t80J?^>abKgbAne=!deI80CgHME4WGE{bBdE&g(9_>x48k+IN#1_o<KPc#
zKo9D}2?&N)fDPF>Ij84zI9WzMl@dM;Q`o!AXP^QzXY>u@vwV)v^95LdX_#Fja8*`e
z7Up0c7CLO6oKZ@S49<>01k-Z7LD1J4<jniG_Ds?p(yaf&Zy{SJ*Y=I+t+ra3YKv@N
z6=rp1d1bkE)CYb1AeHw%o~FMkA#JqF5n#s9HqeT7bOYq1K~AYDGp|9UkLS@-&(-X*
z_6Od;Um!AAB&TdZ%WA+n4AF!qtMRs0vfqYSWLc~_vDt?>2aq7+_af^<5gQfnK@M6N
zY>K5YqNmc_#5O35Y9HE)QN3h0l{V<<v<;(L6o<b&gxI7u=wwQmW?+M(zA~W8X<Nk?
zl2LyZdq=4*zwRs1;~4(jZSAWrv~)kmvs+KoJ+Y;X*v(+)s4q0M4tm|Bi_kMjZnxT5
z3c0zn)H}AdJusUHa@&E#oeFo${D@BCQ=__$bL|qu#VGUA9IvyO45*}dXKIq{AhQFy
zh_UHy=~4^_uIcfL1D}YCWY;Z>Tn+ndgg9OZld2|GMTm~jh%%}t+-j0^MVcqc$&KeF
zD>A-b#KOckk(br$#jO}ganT)vS@R@vyJ4U8A3oZ!{^sK+%?6+7>nuxmmo(trDGU!s
zwPhyl0%r$>%6X_oE>)KY&tE=%@!HZY$H66#Ty!BxY=B*RU@2xOm@IhZV$TZhsd|vx
zu%mQW7|S#WX+x)H!9$0!(D)A%r>-vlTwT)c6m=IPH~$e-3am#gt&KFiKZjFAj4nc!
X@bQ_?yr>$55o#7AZ>4?_ou_{R89@u4

literal 0
HcmV?d00001

diff --git a/client3.py b/client3.py
index f1771c3..3a1b5c6 100644
--- a/client3.py
+++ b/client3.py
@@ -35,25 +35,21 @@ def getDataPoint(quote):
 	stock = quote['stock']
 	bid_price = float(quote['top_bid']['price'])
 	ask_price = float(quote['top_ask']['price'])
-	price = bid_price
+	price = (bid_price + ask_price)/2
 	return stock, bid_price, ask_price, price
 
 def getRatio(price_a, price_b):
-	""" Get ratio of price_a and price_b """
-	""" ------------- Update this function ------------- """
-	""" Also create some unit tests for this function in client_test.py """
-	return 1
+  if (price_b == 0):
+    return
+  return price_a/price_b
 
 # Main
 if __name__ == "__main__":
-
-	# Query the price once every N seconds.
-	for _ in iter(range(N)):
-		quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
-
-		""" ----------- Update to get the ratio --------------- """
-		for quote in quotes:
-			stock, bid_price, ask_price, price = getDataPoint(quote)
-			print ("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
-
-		print ("Ratio %s" % getRatio(price, price))
+    for _ in range(N):
+        quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
+        prices = {}
+        for quote in quotes:
+            stock, bid_price, ask_price, price = getDataPoint(quote)
+            prices[stock] = price
+            print ("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price,price))
+        print ("Ratio %s" % (getRatio(prices['ABC'], prices['DEF'])))
\ No newline at end of file
diff --git a/client_test.py b/client_test.py
index af2bf26..795f8cc 100644
--- a/client_test.py
+++ b/client_test.py
@@ -1,25 +1,56 @@
 import unittest
-from client3 import getDataPoint
+from client3 import *
+
+
 
 class ClientTest(unittest.TestCase):
   def test_getDataPoint_calculatePrice(self):
     quotes = [
       {'top_ask': {'price': 121.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
-      {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
+      {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'},
     ]
     """ ------------ Add the assertion below ------------ """
-
+    for quote in quotes:
+      self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'], (quote['top_bid']['price'] + quote['top_ask']['price'])/2))
+    
+  
   def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
     quotes = [
       {'top_ask': {'price': 119.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
+    for quote in quotes:
+      self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'], (quote['top_bid']['price'] + quote['top_ask']['price'])/2))
+    
+  def testCalculateFirstRecordAverage_ABC(self):
+    quotes = [
+      {'top_ask': {'price': 119.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
+    ]
+    for quote in quotes:
+      self.assertEqual(getDataPoint(quote), ('ABC', 120.48, 119.2, 119.84), 'average price should be the same as current price on first record')
+  
+  def testCalculateFirstRecordAverage_DEF(self):
+    quotes = [
+      
+      {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
+    ]
+    for quote in quotes:
+      self.assertEqual(getDataPoint(quote), ('DEF', 117.87, 121.68, 119.775), 'average price should be the same as current price on first record')
 
+#Fifth test case which I tried but got a traceback error, I also impoted libraries for the function which I have called in this testcase but removed them afterwards.
 
-  """ ------------ Add more unit tests ------------ """
-
-
+"""
+    for _ in range(N):
+      quotes = [
+      {'top_ask': {'price': 119.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
+      {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
+      ]
+      prices = {}
+      for quote in quotes:
+            prices[stock] = price
+            self.assertnotEqual(getRatio(price['ABC'], price['DEF'])),0)
 
+"""
 if __name__ == '__main__':
-    unittest.main()
+    unittest.main()
\ No newline at end of file
-- 
2.20.1

